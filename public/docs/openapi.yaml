openapi: 3.0.3
info:
  title: Almoxarifado
  description: 'API do sistema de Almoxarifado'
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/cadastrar:
    post:
      summary: 'Cria um novo usuário no sistema'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    name: 'Teste Silva'
                    email: teste@prefeitura.sp.gov.br
                    updated_at: '2022-05-20T16:00:22.000000Z'
                    created_at: '2022-05-20T16:00:22.000000Z'
                    id: 2
                  access_token: 3|LWV2yqNvqdIztktLYlvKehKMFn4aCOvKWc7xqMGf
                  token_type: Bearer
                properties:
                  data:
                    type: object
                    example:
                      name: 'Teste Silva'
                      email: teste@prefeitura.sp.gov.br
                      updated_at: '2022-05-20T16:00:22.000000Z'
                      created_at: '2022-05-20T16:00:22.000000Z'
                      id: 2
                  access_token:
                    type: string
                    example: 3|LWV2yqNvqdIztktLYlvKehKMFn4aCOvKWc7xqMGf
                  token_type:
                    type: string
                    example: Bearer
      tags:
        - Autenticação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zjpcsucdekdagixrgqkczaduvzgkrhjzbgwbulcmdznbyetyjxthyeitmordghvqtamazvangbhmlyeyvoluunztisbgrnjfyeejwckedrpklgumhitukrkscijjxrwnxbivkgafwxwgaveyeosidbqwavesgkmdhdtnmsmdaagbtayfynseisqmvgxeczuvszcndtrryinranzovnnhfgjsiljdimmeskpibsejsztwektowszzdmsthte
                email:
                  type: string
                  description: 'E-mail corporativo do usuário.'
                  example: tisvma@prefeitura.sp.gov.br
                password:
                  type: string
                  description: 'Senha do usuário.'
                  example: Teste!123
              required:
                - name
                - email
                - password
  /api/login:
    post:
      summary: 'Efetua login no sistema'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"message\": \"Oi username, bem-vindo!\",\n    \"username\": \"username\",\n    \"id\": 1,\n    \"access_token\": \"1|IEXWeQ8KFQCu3d3giZbTJ7dOTNf9dSACPypztMB3\",\n    \"token_type\": \"Bearer\",\n    \"departamentos\": {\n        \"3\": \"CGPABI\",\n        \"4\": \"CGPABI/DIPO\",\n        \"5\": \"CGPABI/DFS\",\n    }\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'E-mail ou senha está incorreto'
                properties:
                  message:
                    type: string
                    example: 'E-mail ou senha está incorreto'
      tags:
        - Autenticação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'E-mail corporativo do usuário.'
                  example: tisvma@prefeitura.sp.gov.br
                password:
                  type: string
                  description: 'Senha do usuário.'
                  example: Teste!123
              required:
                - email
                - password
      security: []
  /api/alterar_senha:
    post:
      summary: 'Altera a senha do usuário'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 5|02KLXZaRYzgJybyy2rMTRKXKIOuuE3EylnT7JQVv'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Senha alterada com sucesso!'
                properties:
                  message:
                    type: string
                    example: 'Senha alterada com sucesso!'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Autenticação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'E-mail corporativo do usuário.'
                  example: tisvma@prefeitura.sp.gov.br
                password:
                  type: string
                  description: 'Senha atual do usuário.'
                  example: Teste!123
                newpassword:
                  type: string
                  description: 'Senha nova do usuário.'
                  example: Teste!456
                password_confirmation:
                  type: string
                  description: 'Confirmação de nova senha do usuário.'
                  example: Teste!456
              required:
                - email
                - password
                - newpassword
                - password_confirmation
  /api/departamentos:
    get:
      summary: 'Lista os departamentos'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Departamento
  /api/perfil:
    get:
      summary: 'Exibe dados do usuário logado de acordo com o Token enviado'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 5|02KLXZaRYzgJybyy2rMTRKXKIOuuE3EylnT7JQVv'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'Admin NDTIC'
                  email: tisvma@prefeitura.sp.gov.br
                  email_verified_at: null
                  ativo: 1
                  created_at: '2022-03-23T19:06:48.000000Z'
                  updated_at: '2022-03-23T19:06:48.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'Admin NDTIC'
                  email:
                    type: string
                    example: tisvma@prefeitura.sp.gov.br
                  email_verified_at:
                    type: string
                    example: null
                  ativo:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    example: '2022-03-23T19:06:48.000000Z'
                  updated_at:
                    type: string
                    example: '2022-03-23T19:06:48.000000Z'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/transferencia_itens:
    get:
      summary: 'Lista Todos os itens de Transferencia.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Cadastra um item de transferencia'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Item de transferencia cadastrado com sucesso!'
                  itens:
                    entrada_id: 1
                    item_id: 5
                    quantidade: 1
                    updated_at: '2023-05-10T14:37:52.000000Z'
                    created_at: '2023-05-10T14:37:52.000000Z'
                    id: 4
                properties:
                  mensagem:
                    type: string
                    example: 'Item de transferencia cadastrado com sucesso!'
                  itens:
                    type: object
                    example:
                      entrada_id: 1
                      item_id: 5
                      quantidade: 1
                      updated_at: '2023-05-10T14:37:52.000000Z'
                      created_at: '2023-05-10T14:37:52.000000Z'
                      id: 4
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entrada_id:
                  type: integer
                  description: 'ID da entrada.'
                  example: 1
                item_id:
                  type: integer
                  description: 'ID do item transferencia.'
                  example: 5
                quantidade:
                  type: integer
                  description: 'Quantidade de itens.'
                  example: 1
              required:
                - entrada_id
                - item_id
                - quantidade
  '/api/transferencia_itens/{id}':
    get:
      summary: 'Mostra um Item de Transferencia'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Item de transferencia encontrado com sucesso!'
                  itens:
                    id: 2
                    entrada_id: 244
                    item_id: 9
                    quantidade: 4
                    created_at: '2023-05-05T15:20:08.000000Z'
                    updated_at: '2023-05-05T15:22:01.000000Z'
                properties:
                  mensagem:
                    type: string
                    example: 'Item de transferencia encontrado com sucesso!'
                  itens:
                    type: object
                    example:
                      id: 2
                      entrada_id: 244
                      item_id: 9
                      quantidade: 4
                      created_at: '2023-05-05T15:20:08.000000Z'
                      updated_at: '2023-05-05T15:22:01.000000Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Item de transferencia não encontrada!'
                properties:
                  mensagem:
                    type: string
                    example: 'Item de transferencia não encontrada!'
      tags:
        - Endpoints
    put:
      summary: 'Atualiza um Item de Transferencia'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Item de transferencia atualizado com sucesso!'
                  itens:
                    id: 5
                    entrada_id: 244
                    item_id: 9
                    quantidade: 4
                    created_at: '2023-05-10T14:41:11.000000Z'
                    updated_at: '2023-05-10T14:41:22.000000Z'
                properties:
                  mensagem:
                    type: string
                    example: 'Item de transferencia atualizado com sucesso!'
                  itens:
                    type: object
                    example:
                      id: 5
                      entrada_id: 244
                      item_id: 9
                      quantidade: 4
                      created_at: '2023-05-10T14:41:11.000000Z'
                      updated_at: '2023-05-10T14:41:22.000000Z'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entrada_id:
                  type: integer
                  description: 'ID da entrada.'
                  example: 244
                item_id:
                  type: integer
                  description: 'ID do item transferencia.'
                  example: 9
                quantidade:
                  type: integer
                  description: 'Quantidade de itens.'
                  example: 4
              required:
                - entrada_id
                - item_id
                - quantidade
    delete:
      summary: 'Deleta um Item de Transferencia'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Item de transferencia deletado com sucesso!'
                  itens:
                    id: 6
                    entrada_id: 5
                    item_id: 19
                    quantidade: 2
                    created_at: '2023-05-10T14:43:16.000000Z'
                    updated_at: '2023-05-10T14:43:16.000000Z'
                properties:
                  mensagem:
                    type: string
                    example: 'Item de transferencia deletado com sucesso!'
                  itens:
                    type: object
                    example:
                      id: 6
                      entrada_id: 5
                      item_id: 19
                      quantidade: 2
                      created_at: '2023-05-10T14:43:16.000000Z'
                      updated_at: '2023-05-10T14:43:16.000000Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Item de transferencia não encontrado para deletar.'
                properties:
                  mensagem:
                    type: string
                    example: 'Item de transferencia não encontrado para deletar.'
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transferencia iten.'
        example: animi
        required: true
        schema:
          type: string
      -
        in: path
        name: integer
        description: 'Optional parameter. ID do item.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: occaecati
  /api/ocorrencia_itens:
    get:
      summary: 'Lista todos os itens de uma Ocorrencia.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Cadastra um Item de Ocorrencia.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Item de ocorrencia cadastrado com sucesso!'
                  item:
                    ocorrencia_id: 5
                    item_id: 6
                    quantidade: 36
                    updated_at: '2023-05-10T15:46:54.000000Z'
                    created_at: '2023-05-10T15:46:54.000000Z'
                    id: 6
                properties:
                  mensagem:
                    type: string
                    example: 'Item de ocorrencia cadastrado com sucesso!'
                  item:
                    type: object
                    example:
                      ocorrencia_id: 5
                      item_id: 6
                      quantidade: 36
                      updated_at: '2023-05-10T15:46:54.000000Z'
                      created_at: '2023-05-10T15:46:54.000000Z'
                      id: 6
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ocorrencia_id:
                  type: integer
                  description: 'ID da Ocorrencia.'
                  example: 5
                item_id:
                  type: integer
                  description: 'ID do item.'
                  example: 6
                quantidade:
                  type: integer
                  description: 'Quantidade de itens.'
                  example: 36
              required:
                - ocorrencia_id
                - item_id
                - quantidade
  '/api/ocorrencia_itens/{id}':
    get:
      summary: 'Mostra um item de Ocorrencia'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Item de ocorrencia encontrado com sucesso!'
                  item:
                    id: 1
                    ocorrencia_id: 1
                    item_id: 2
                    quantidade: 1
                    created_at: '2023-05-08T14:30:10.000000Z'
                    updated_at: '2023-05-08T14:30:10.000000Z'
                properties:
                  mensagem:
                    type: string
                    example: 'Item de ocorrencia encontrado com sucesso!'
                  item:
                    type: object
                    example:
                      id: 1
                      ocorrencia_id: 1
                      item_id: 2
                      quantidade: 1
                      created_at: '2023-05-08T14:30:10.000000Z'
                      updated_at: '2023-05-08T14:30:10.000000Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Item de ocorrencia não encontrada!'
                properties:
                  mensagem:
                    type: string
                    example: 'Item de ocorrencia não encontrada!'
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Edita um Item de Ocorrencia.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Item de ocorrencia editado com sucesso!'
                  item:
                    id: 6
                    ocorrencia_id: 5
                    item_id: 6
                    quantidade: 36
                    created_at: '2023-05-10T15:46:54.000000Z'
                    updated_at: '2023-05-10T15:46:54.000000Z'
                properties:
                  mensagem:
                    type: string
                    example: 'Item de ocorrencia editado com sucesso!'
                  item:
                    type: object
                    example:
                      id: 6
                      ocorrencia_id: 5
                      item_id: 6
                      quantidade: 36
                      created_at: '2023-05-10T15:46:54.000000Z'
                      updated_at: '2023-05-10T15:46:54.000000Z'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ocorrencia_id:
                  type: integer
                  description: 'ID da Ocorrencia.'
                  example: 5
                item_id:
                  type: integer
                  description: 'ID do item.'
                  example: 6
                quantidade:
                  type: integer
                  description: 'Quantidade de itens.'
                  example: 36
              required:
                - ocorrencia_id
                - item_id
                - quantidade
    delete:
      summary: 'Deleta um item de Ocorrencia'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Ocorrencia deletada com sucesso!'
                  ocorrencia:
                    id: 2
                    ocorrencia_id: 0
                    item_id: 3
                    quantidade: 1
                    created_at: '2023-05-08T14:31:20.000000Z'
                    updated_at: '2023-05-08T14:32:24.000000Z'
                properties:
                  mensagem:
                    type: string
                    example: 'Ocorrencia deletada com sucesso!'
                  ocorrencia:
                    type: object
                    example:
                      id: 2
                      ocorrencia_id: 0
                      item_id: 3
                      quantidade: 1
                      created_at: '2023-05-08T14:31:20.000000Z'
                      updated_at: '2023-05-08T14:32:24.000000Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Ocorrencia não encontrada para deletar.'
                properties:
                  mensagem:
                    type: string
                    example: 'Ocorrencia não encontrada para deletar.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ocorrencia iten.'
        example: laboriosam
        required: true
        schema:
          type: string
      -
        in: path
        name: integer
        description: 'ID do item que deseja mostrar.'
        example: molestias
        required: true
        schema:
          type: string
  /api/entradas:
    get:
      summary: 'Lista as entradas'
      description: ''
      parameters:
        -
          in: query
          name: 'filter[processo_sei]'
          description: 'Filtro de número do processo.'
          example: 6000.2022/0000123-4
          required: false
          schema:
            type: string
            description: 'Filtro de número do processo.'
            example: 6000.2022/0000123-4
        -
          in: query
          name: 'filter[numero_contrato]'
          description: 'Filtro de número do contrato da entrada'
          example: 001/SVMA/2022
          required: false
          schema:
            type: string
            description: 'Filtro de número do contrato da entrada'
            example: 001/SVMA/2022
        -
          in: query
          name: 'filter[local]'
          description: 'Filtro de nome da base destino dos materiais da entrada.'
          example: 'Base Leopoldina'
          required: false
          schema:
            type: string
            description: 'Filtro de nome da base destino dos materiais da entrada.'
            example: 'Base Leopoldina'
        -
          in: query
          name: 'filter[numero_nota_fiscal]'
          description: 'Filtro do número da nota fiscal.'
          example: '1234567'
          required: false
          schema:
            type: string
            description: 'Filtro do número da nota fiscal.'
            example: '1234567'
        -
          in: query
          name: 'filter[entrada_depois_de]'
          description: 'Filtro inicial de período da data de entrada do contrato.'
          example: '2023-01-01'
          required: false
          schema:
            type: string
            description: 'Filtro inicial de período da data de entrada do contrato.'
            example: '2023-01-01'
        -
          in: query
          name: 'filter[entrada_antes_de]'
          description: 'Filtro final de período da data de entrada do contrato.'
          example: '2023-12-31'
          required: false
          schema:
            type: string
            description: 'Filtro final de período da data de entrada do contrato.'
            example: '2023-12-31'
        -
          in: query
          name: 'filter[tipo]'
          description: 'Tipo de material da entrada.'
          example: alvenaria
          required: false
          schema:
            type: string
            description: 'Tipo de material da entrada.'
            example: alvenaria
        -
          in: query
          name: sort
          description: "Campo a ser ordenado (padrão ascendente, inserir um hífen antes para decrescente). Colunas possíveis: 'numero_nota_fiscal', 'data_entrada', 'processo_sei', 'numero_contrato', 'locais.nome', 'tipo_items.nome'"
          example: '-processo_sei'
          required: false
          schema:
            type: string
            description: "Campo a ser ordenado (padrão ascendente, inserir um hífen antes para decrescente). Colunas possíveis: 'numero_nota_fiscal', 'data_entrada', 'processo_sei', 'numero_contrato', 'locais.nome', 'tipo_items.nome'"
            example: '-processo_sei'
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Entrada
  /api/entrada:
    post:
      summary: 'Cadastra uma nova entrada'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Entrada
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                departamento_id:
                  type: integer
                  description: 'ID do departamento.'
                  example: 2
                local_id:
                  type: integer
                  description: 'ID do local.'
                  example: 2
                processo_sei:
                  type: string
                  description: 'Processo SEI.'
                  example: '0123000134569000'
                numero_contrato:
                  type: string
                  description: 'Número do contrato.'
                  example: 0001SVMA2022
                numero_nota_fiscal:
                  type: string
                  description: 'Número da Nota Fiscal.'
                  example: '1234'
                data_entrada:
                  type: date
                  description: 'Data do serviço.'
                  example: '"2022-08-11"'
                arquivo_nota_fiscal:
                  type: string
                  format: binary
                  description: 'nullable Arquivo da Nota Fiscal.'
                entrada_items:
                  type: object
                  description: 'Lista de itens.'
                  example:
                    -
                      id: 1
                      quantidade: 500
                    -
                      id: 2
                      quantidade: 480
                  properties:
                    id:
                      type: integer
                      description: 'ID do item.'
                      example: 2
                    quantidade:
                      type: integer
                      description: 'Quantidade informada para o item.'
                      example: 480
              required:
                - processo_sei
                - numero_contrato
                - numero_nota_fiscal
                - data_entrada
  '/api/entrada/{id}':
    get:
      summary: 'Mostra uma entrada específica'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    departamento_id: 2
                    local_id: 2
                    data_entrada: '2022-08-11'
                    processo_sei: '0123000134569000'
                    numero_contrato: 2343rbte67b63
                    numero_nota_fiscal: '1234'
                    arquivo_nota_fiscal: files/entrada_294-20220909055100.pdf
                    arquivo_nota_fiscal_url: 'http://localhost:8000/storage/files/entrada_294-20220909055100.pdf'
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      departamento_id: 2
                      local_id: 2
                      data_entrada: '2022-08-11'
                      processo_sei: '0123000134569000'
                      numero_contrato: 2343rbte67b63
                      numero_nota_fiscal: '1234'
                      arquivo_nota_fiscal: files/entrada_294-20220909055100.pdf
                      arquivo_nota_fiscal_url: 'http://localhost:8000/storage/files/entrada_294-20220909055100.pdf'
      tags:
        - Entrada
    delete:
      summary: 'Deleta uma entrada'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'entrada deletada com sucesso!'
                  data:
                    id: 1
                    departamento_id: 2
                    local_id: 2
                    data_entrada: '2022-08-11'
                    processo_sei: '0123000134569000'
                    numero_contrato: 2343rbte67b63
                    numero_nota_fiscal: '1234'
                    arquivo_nota_fiscal: files/entrada_294-20220909055100.pdf
                    arquivo_nota_fiscal_url: 'http://localhost:8000/storage/files/entrada_294-20220909055100.pdf'
                properties:
                  message:
                    type: string
                    example: 'entrada deletada com sucesso!'
                  data:
                    type: object
                    example:
                      id: 1
                      departamento_id: 2
                      local_id: 2
                      data_entrada: '2022-08-11'
                      processo_sei: '0123000134569000'
                      numero_contrato: 2343rbte67b63
                      numero_nota_fiscal: '1234'
                      arquivo_nota_fiscal: files/entrada_294-20220909055100.pdf
                      arquivo_nota_fiscal_url: 'http://localhost:8000/storage/files/entrada_294-20220909055100.pdf'
      tags:
        - Entrada
    post:
      summary: 'Edita uma entrada'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    departamento_id: 2
                    local_id: 2
                    data_entrada: '2022-08-11'
                    processo_sei: '0123000134569000'
                    numero_contrato: 2343rbte67b63
                    numero_nota_fiscal: '1234'
                    arquivo_nota_fiscal: 'DANFE?'
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      departamento_id: 2
                      local_id: 2
                      data_entrada: '2022-08-11'
                      processo_sei: '0123000134569000'
                      numero_contrato: 2343rbte67b63
                      numero_nota_fiscal: '1234'
                      arquivo_nota_fiscal: 'DANFE?'
      tags:
        - Entrada
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                departamento_id:
                  type: integer
                  description: 'ID do departamento.'
                  example: 2
                local_id:
                  type: integer
                  description: 'ID do local.'
                  example: 2
                processo_sei:
                  type: string
                  description: 'Processo SEI.'
                  example: '0123000134569000'
                numero_contrato:
                  type: string
                  description: 'Número do contrato.'
                  example: 2343rbte67b63
                numero_nota_fiscal:
                  type: string
                  description: 'Número da Nota Fiscal.'
                  example: '1234'
                data_entrada:
                  type: date
                  description: 'Data do serviço.'
                  example: '"2022-08-11"'
                arquivo_nota_fiscal:
                  type: string
                  description: 'Arquivo da Nota Fiscal.'
                  example: 'DANFE?'
              required:
                - processo_sei
                - numero_contrato
                - numero_nota_fiscal
                - data_entrada
                - arquivo_nota_fiscal
    parameters:
      -
        in: path
        name: id
        description: 'ID da entrada.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/entrada/{id}/items':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - EntradaItem
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the entrada.'
        example: 20
        required: true
        schema:
          type: integer
  /api/inventario:
    post:
      summary: 'Cadastra um novo inventário'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    departamento_id: 2
                    item_id: 2
                    local_id: 2
                    quantidade: '10'
                    qtd_alerta: '10'
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      departamento_id: 2
                      item_id: 2
                      local_id: 2
                      quantidade: '10'
                      qtd_alerta: '10'
      tags:
        - Inventário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: integer
                  description: 'ID do item.'
                  example: 2
                local_id:
                  type: integer
                  description: 'ID do local.'
                  example: 2
                quantidade:
                  type: number
                  description: Quantidade.
                  example: 10.0
                departamento_id:
                  type: integer
                  description: 'ID do departamento.'
                  example: 2
                qtd_alerta:
                  type: number
                  description: Quantidade.
                  example: 10.0
              required:
                - quantidade
                - qtd_alerta
  '/api/inventario/{id}':
    get:
      summary: 'Mostra uma entrada de inventário'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    departamento_id: 2
                    item_id: 2
                    local_id: 2
                    quantidade: '10'
                    qtd_alerta: '10'
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      departamento_id: 2
                      item_id: 2
                      local_id: 2
                      quantidade: '10'
                      qtd_alerta: '10'
      tags:
        - Inventário
    put:
      summary: 'Edita um inventario'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    departamento_id: 2
                    item_id: 2
                    local_id: 2
                    quantidade: '10'
                    qtd_alerta: '10'
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      departamento_id: 2
                      item_id: 2
                      local_id: 2
                      quantidade: '10'
                      qtd_alerta: '10'
      tags:
        - Inventário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: integer
                  description: 'ID do item.'
                  example: 2
                local_id:
                  type: integer
                  description: 'ID do local.'
                  example: 2
                quantidade:
                  type: number
                  description: Quantidade.
                  example: 10.0
                departamento_id:
                  type: integer
                  description: 'ID do departamento.'
                  example: 2
                qtd_alerta:
                  type: number
                  description: Quantidade.
                  example: 10.0
              required:
                - quantidade
                - qtd_alerta
    delete:
      summary: 'Deleta um inventário'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'entrada deletada com sucesso!'
                  data:
                    id: 1
                    departamento_id: 2
                    item_id: 2
                    local_id: 2
                    quantidade: '10'
                    qtd_alerta: '10'
                properties:
                  message:
                    type: string
                    example: 'entrada deletada com sucesso!'
                  data:
                    type: object
                    example:
                      id: 1
                      departamento_id: 2
                      item_id: 2
                      local_id: 2
                      quantidade: '10'
                      qtd_alerta: '10'
      tags:
        - Inventário
    parameters:
      -
        in: path
        name: id
        description: 'ID de inventário.'
        example: 1
        required: true
        schema:
          type: integer
  /api/inventarios:
    get:
      summary: 'Lista as entradas de inventário'
      description: ''
      parameters:
        -
          in: query
          name: 'filter[base]'
          description: 'Filtro de Local (base) do item.'
          example: Leopoldina
          required: false
          schema:
            type: string
            description: 'Filtro de Local (base) do item.'
            example: Leopoldina
        -
          in: query
          name: 'filter[item]'
          description: 'Filtro de Nome do Item'
          example: 'Adaptador Pvc'
          required: false
          schema:
            type: string
            description: 'Filtro de Nome do Item'
            example: 'Adaptador Pvc'
        -
          in: query
          name: 'filter[tipo_item]'
          description: 'Filtro de Tipo de item.'
          example: alvenaria
          required: false
          schema:
            type: string
            description: 'Filtro de Tipo de item.'
            example: alvenaria
        -
          in: query
          name: 'filter[tipo_medida]'
          description: 'Filtro do Tipo de medida do item.'
          example: Pç
          required: false
          schema:
            type: string
            description: 'Filtro do Tipo de medida do item.'
            example: Pç
        -
          in: query
          name: 'filter[quantidade_maior_que]'
          description: 'Filtro inicial de quantidade.'
          example: '200'
          required: false
          schema:
            type: string
            description: 'Filtro inicial de quantidade.'
            example: '200'
        -
          in: query
          name: 'filter[quantidade_menor_que]'
          description: 'Filtro final de quantidade.'
          example: '800'
          required: false
          schema:
            type: string
            description: 'Filtro final de quantidade.'
            example: '800'
        -
          in: query
          name: sort
          description: "Campo a ser ordenado (padrão ascendente, inserir um hífen antes para decrescente). Colunas possíveis: 'id', 'items.nome', 'tipo_items.nome', 'medidas.tipo', 'locais.nome', 'quantidade'"
          example: '-locais.nome'
          required: false
          schema:
            type: string
            description: "Campo a ser ordenado (padrão ascendente, inserir um hífen antes para decrescente). Colunas possíveis: 'id', 'items.nome', 'tipo_items.nome', 'medidas.tipo', 'locais.nome', 'quantidade'"
            example: '-locais.nome'
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Inventário
  /api/base/items:
    get:
      summary: 'Lista os itens de inventário do local e departamento especificados'
      description: ''
      parameters:
        -
          in: query
          name: base
          description: 'ID do local.'
          example: '2'
          required: true
          schema:
            type: string
            description: 'ID do local.'
            example: '2'
        -
          in: query
          name: depto
          description: 'ID do departamento.'
          example: '3'
          required: true
          schema:
            type: string
            description: 'ID do departamento.'
            example: '3'
        -
          in: query
          name: tipo
          description: 'ID do tipo de item.'
          example: '2'
          required: true
          schema:
            type: string
            description: 'ID do tipo de item.'
            example: '2'
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Inventário
  /api/items_acabando:
    get:
      summary: 'lista os itens que estão acabando, de acordo com a quantidade definida no alerta, ou se já acabaram'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 93
                      departamento_id: 3
                      departamento: CGPABI/DGPU
                      item_id: 1
                      item: 'Argamassa, Na Cor Cinza '
                      tipo_item: alvenaria
                      medida: SC
                      local_id: 1
                      local: LAB
                      local_tipo: base
                      quantidade: 100
                      qtd_alerta: 101
                    -
                      id: 106
                      departamento_id: 3
                      departamento: CGPABI/DGPU
                      item_id: 18
                      item: 'Ripa de Peroba do Norte 1,5 cm  X 5 cm  Bruta (cupiúba)'
                      tipo_item: carpintaria
                      medida: MT
                      local_id: 2
                      local: 'UEM Base Leopoldina'
                      local_tipo: base
                      quantidade: 5
                      qtd_alerta: 6
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 93
                        departamento_id: 3
                        departamento: CGPABI/DGPU
                        item_id: 1
                        item: 'Argamassa, Na Cor Cinza '
                        tipo_item: alvenaria
                        medida: SC
                        local_id: 1
                        local: LAB
                        local_tipo: base
                        quantidade: 100
                        qtd_alerta: 101
                      -
                        id: 106
                        departamento_id: 3
                        departamento: CGPABI/DGPU
                        item_id: 18
                        item: 'Ripa de Peroba do Norte 1,5 cm  X 5 cm  Bruta (cupiúba)'
                        tipo_item: carpintaria
                        medida: MT
                        local_id: 2
                        local: 'UEM Base Leopoldina'
                        local_tipo: base
                        quantidade: 5
                        qtd_alerta: 6
                    items:
                      type: object
      tags:
        - Inventário
    parameters:
      -
        in: path
        name: id
        description: 'ID do inventário que deseja deletar.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/items/tipo/{id}':
    get:
      summary: 'Lista os itens de acordo com o tipo de item'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      departamento_id: 3
                      departamento: CGPABI/DGPU
                      medida_id: 4
                      medida: SC
                      tipo_item_id: 1
                      tipo_item: alvenaria
                      nome: 'Argamassa, Na Cor Cinza '
                      descricao: 'Argamassa; Composto de Agregados Minerais Classificados, Aditivo Especial Nao Toxico;'
                    -
                      id: 2
                      departamento_id: 3
                      departamento: CGPABI/DGPU
                      medida_id: 4
                      medida: SC
                      tipo_item_id: 1
                      tipo_item: alvenaria
                      nome: 'Cimento Portland Composto(cpii-f-32mpa) '
                      descricao: 'Cimento Portland Composto (cp Ii-f); Composto Com Filer; Com Resistencia de 32 Mpa; Faixa de Porcent.'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        departamento_id: 3
                        departamento: CGPABI/DGPU
                        medida_id: 4
                        medida: SC
                        tipo_item_id: 1
                        tipo_item: alvenaria
                        nome: 'Argamassa, Na Cor Cinza '
                        descricao: 'Argamassa; Composto de Agregados Minerais Classificados, Aditivo Especial Nao Toxico;'
                      -
                        id: 2
                        departamento_id: 3
                        departamento: CGPABI/DGPU
                        medida_id: 4
                        medida: SC
                        tipo_item_id: 1
                        tipo_item: alvenaria
                        nome: 'Cimento Portland Composto(cpii-f-32mpa) '
                        descricao: 'Cimento Portland Composto (cp Ii-f); Composto Com Filer; Com Resistencia de 32 Mpa; Faixa de Porcent.'
                    items:
                      type: object
      tags:
        - Item
    parameters:
      -
        in: path
        name: id
        description: 'ID do tipo de item.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locais:
    get:
      summary: 'Lista os locais'
      description: ''
      parameters:
        -
          in: query
          name: 'filter[tipo]'
          description: 'Filtro de tipo de local (base, parque, autarquia, secretaria, subprefeitura).'
          example: base
          required: false
          schema:
            type: string
            description: 'Filtro de tipo de local (base, parque, autarquia, secretaria, subprefeitura).'
            example: base
        -
          in: query
          name: 'filter[nome]'
          description: 'Filtro de nome do local'
          example: 'Base Leopoldina'
          required: false
          schema:
            type: string
            description: 'Filtro de nome do local'
            example: 'Base Leopoldina'
        -
          in: query
          name: 'filter[cep]'
          description: 'Filtro de CEP do local, separado por hífen.'
          example: 04103-000
          required: false
          schema:
            type: string
            description: 'Filtro de CEP do local, separado por hífen.'
            example: 04103-000
        -
          in: query
          name: 'filter[departamento_id]'
          description: 'Filtro do ID do departamento ao qual pertence o local.'
          example: '1234567'
          required: false
          schema:
            type: string
            description: 'Filtro do ID do departamento ao qual pertence o local.'
            example: '1234567'
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Local
  /api/medidas:
    get:
      summary: 'Lista as medidas'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Medida
  /api/ocorrencia:
    get:
      summary: 'Lista todas as Ocorrencias'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n     \"mensagem\": \"Todas ocorrencias cadastradas\",\n     \"ocorrencia\": [\n         {\n             \"id\": 1,\n             \"local_id\": 1,\n             \"data_ocorrencia\": \"2023-05-07 00:00:00\",\n             \"tipo_ocorrencia\": \"extravio\",\n             \"boletim_ocorrencia\": \"path\",\n             \"justificativa\": \"justificativa_teste\",\n             \"user_id\": 1,\n             \"created_at\": null,\n             \"updated_at\": \"2023-05-05T15:44:30.000000Z\",\n             \"local\": {\n                 \"id\": 1,\n                 \"departamento_id\": 1,\n                 \"nome\": \"Lugar 01\",\n                 \"tipo\": \"parque\",\n                 \"cep\": \"93472898\",\n                 \"logradouro\": null,\n                 \"numero\": null,\n                 \"bairro\": null,\n                 \"cidade\": null,\n                 \"created_at\": null,\n                 \"updated_at\": null\n             }\n       }"
      tags:
        - Ocorrencias
    post:
      summary: 'Cadastra uma nova Ocorrencia.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n     \"mensagem\": \"Ocorrencia cadastrada com sucesso!\",\n     \"ocorrencia\": {\n         \"local_id\": 1,\n         \"data_ocorrencia\": \"2023-05-04\",\n         \"tipo_ocorrencia\": \"furto\",\n         \"boletim_ocorrencia\": \"teste\",\n         \"justificativa\": \"justificativa_teste\",\n         \"user_id\": 1,\n         \"updated_at\": \"2023-05-10T15:20:14.000000Z\",\n         \"created_at\": \"2023-05-10T15:20:14.000000Z\",\n         \"id\": 5\n     },\n     \"itens\": [\n         {\n             \"ocorrencia_id\": 3,\n             \"item_id\": 5,\n             \"quantidade\": 255\n         },\n     ]\n}"
      tags:
        - Ocorrencias
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                local_id:
                  type: integer
                  description: 'ID do local.'
                  example: 1
                data_ocorrencia:
                  type: date
                  description: 'Data da Ocorrencia.'
                  example: 2023/05/06
                tipo_ocorrencia:
                  type: enum
                  description: 'Tipo da Ocorrencia. (avaria, furto, extravio)'
                  example: furto
                boletim_ocorrencia:
                  type: string
                  format: binary
                  description: 'Arquivo do boletim de Ocorrencia'
                justificativa:
                  type: text
                  description: 'Campo para justificativa da Ocorrencia'
                  example: illo
                itens:
                  type: object
                  description: ''
                  example:
                    ocorrencia_id: 3
                  properties:
                    ocorrencia_id:
                      type: integer
                      description: 'ID da entrada.'
                      example: 3
                    item_id:
                      type: integer
                      description: 'ID do item.'
                      example: 5
                    quantidade:
                      type: integer
                      description: 'Quantidade de itens.'
                      example: 401
              required:
                - local_id
                - data_ocorrencia
                - tipo_ocorrencia
                - boletim_ocorrencia
                - justificativa
                - itens
  '/api/ocorrencia/{id}':
    get:
      summary: 'Mostrar uma Ocorrencia'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Ocorrencia encontrada com sucesso!'
                  ocorrencia:
                    id: 20
                    local_id: 1
                    data_ocorrencia: '2023-05-04 00:00:00'
                    tipo_ocorrencia: furto
                    boletim_ocorrencia: teste
                    justificativa: 'teste kk'
                    user_id: 1
                    created_at: '2023-05-12T12:34:44.000000Z'
                    updated_at: '2023-05-12T12:34:44.000000Z'
                    local:
                      id: 1
                      departamento_id: 1
                      nome: 'Lugar 01'
                      tipo: parque
                      cep: '93472898'
                      logradouro: null
                      numero: null
                      bairro: null
                      cidade: null
                      created_at: null
                      updated_at: null
                properties:
                  mensagem:
                    type: string
                    example: 'Ocorrencia encontrada com sucesso!'
                  ocorrencia:
                    type: object
                    example:
                      id: 20
                      local_id: 1
                      data_ocorrencia: '2023-05-04 00:00:00'
                      tipo_ocorrencia: furto
                      boletim_ocorrencia: teste
                      justificativa: 'teste kk'
                      user_id: 1
                      created_at: '2023-05-12T12:34:44.000000Z'
                      updated_at: '2023-05-12T12:34:44.000000Z'
                      local:
                        id: 1
                        departamento_id: 1
                        nome: 'Lugar 01'
                        tipo: parque
                        cep: '93472898'
                        logradouro: null
                        numero: null
                        bairro: null
                        cidade: null
                        created_at: null
                        updated_at: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Ocorrencia não encontrada!'
                properties:
                  mensagem:
                    type: string
                    example: 'Ocorrencia não encontrada!'
      tags:
        - Ocorrencias
    put:
      summary: 'Edita uma Ocorrencia.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Ocorrencia atualizada com sucesso!'
                  ocorrencia:
                    local_id: 1
                    data_ocorrencia: '2023-05-04'
                    tipo_ocorrencia: furto
                    boletim_ocorrencia: teste
                    justificativa: 'teste kk'
                    user_id: 1
                    updated_at: '2023-05-10T15:20:14.000000Z'
                    created_at: '2023-05-10T15:20:14.000000Z'
                    id: 5
                properties:
                  mensagem:
                    type: string
                    example: 'Ocorrencia atualizada com sucesso!'
                  ocorrencia:
                    type: object
                    example:
                      local_id: 1
                      data_ocorrencia: '2023-05-04'
                      tipo_ocorrencia: furto
                      boletim_ocorrencia: teste
                      justificativa: 'teste kk'
                      user_id: 1
                      updated_at: '2023-05-10T15:20:14.000000Z'
                      created_at: '2023-05-10T15:20:14.000000Z'
                      id: 5
      tags:
        - Ocorrencias
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                local_id:
                  type: integer
                  description: 'ID do local.'
                  example: 1
                data_ocorrencia:
                  type: date
                  description: 'Data da Ocorrencia.'
                  example: 2023/05/06
                tipo_ocorrencia:
                  type: enum
                  description: 'Tipo da Ocorrencia. (avaria, furto, extravio)'
                  example: furto
                boletim_ocorrencia:
                  type: string
                  format: binary
                  description: 'Arquivo do boletim de Ocorrencia'
                justificativa:
                  type: text
                  description: 'Campo para justificativa da Ocorrencia.'
                  example: '"Teste"'
              required:
                - local_id
                - data_ocorrencia
                - tipo_ocorrencia
                - boletim_ocorrencia
                - justificativa
    delete:
      summary: 'Deletar uma Ocorrencia'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Ocorrencia deletada com sucesso!'
                  ocorrencia:
                    id: 6
                    local_id: 1
                    data_ocorrencia: '2023-05-04 00:00:00'
                    tipo_ocorrencia: furto
                    boletim_ocorrencia: teste
                    justificativa: 'teste kk'
                    user_id: 1
                    created_at: '2023-05-10T15:28:10.000000Z'
                    updated_at: '2023-05-10T15:28:10.000000Z'
                properties:
                  mensagem:
                    type: string
                    example: 'Ocorrencia deletada com sucesso!'
                  ocorrencia:
                    type: object
                    example:
                      id: 6
                      local_id: 1
                      data_ocorrencia: '2023-05-04 00:00:00'
                      tipo_ocorrencia: furto
                      boletim_ocorrencia: teste
                      justificativa: 'teste kk'
                      user_id: 1
                      created_at: '2023-05-10T15:28:10.000000Z'
                      updated_at: '2023-05-10T15:28:10.000000Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Transferencia não encontrada para deletar!'
                properties:
                  mensagem:
                    type: string
                    example: 'Transferencia não encontrada para deletar!'
      tags:
        - Ocorrencias
    parameters:
      -
        in: path
        name: id
        description: 'ID da Ocorrencia.'
        example: 2
        required: true
        schema:
          type: integer
  /api/ordem_servico:
    post:
      summary: 'Cadastra uma ordem de serviço'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"data\": {\n        \"id\": 1,\n        \"departamento_id\": 2,\n        \"origem_id\": 1,\n        \"local_servico_id\": 2,\n        \"status\": \"Iniciada\",\n        \"data_inicio_servico\": \"2022-08-30T14:48\",\n        \"data_fim_servico\": \"2022-08-31T17:50\",\n        \"almoxarife_nome\": \"João\",\n        \"almoxarife_email\": \"joao@teste.com.br\",\n        \"especificacao\": \"reforma\",\n        \"profissional\": \"José\",\n        \"horas_execucao\": 10,\n        \"observacoes\": \"observações referente ao serviço\",,\n        \"flg_baixa\": 0,\n        \"user_id\": 1,\n        \"ordem_servico_profissionais\": [\n            {\n                \"id\": 1,\n                \"data_inicio\": \"2022-08-30\",\n                \"horas_empregadas\": 6\n            },\n            {\n                \"id\": 2,\n                \"data_inicio\": \"2022-08-31\",\n                \"horas_empregadas\": 4\n            }\n        ],\n        \"ordem_servico_items\": [\n            {\n                \"id\": 1,\n                \"quantidade\": 500\n            },\n            {\n                \"id\": 2,\n                \"quantidade\": 480\n            }\n        ]\n    }\n}"
      tags:
        - OrdemServico
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                departamento_id:
                  type: integer
                  description: 'ID do Departamento.'
                  example: 2
                origem_id:
                  type: integer
                  description: 'ID do Origem.'
                  example: 1
                local_servico_id:
                  type: integer
                  description: 'ID do Local do serviço.'
                  example: 2
                data_inicio_servico:
                  type: datetime
                  description: 'Data do serviço.'
                  example: '2022-08-30T14:48'
                almoxarife_nome:
                  type: string
                  description: 'Nome do Almoxarife.'
                  example: João
                almoxarife_email:
                  type: string
                  description: 'E-mail do Almoxarife.'
                  example: joao@teste.com.br
                user_id:
                  type: integer
                  description: 'ID do usuário.'
                  example: 1
                status:
                  type: enum
                  description: "('A iniciar','Iniciada','Finalizada') Tipo."
                  example: Iniciada
                data_fim_servico:
                  type: datetime
                  description: 'Data do serviço.'
                  example: '2022-08-31T17:50'
                especificacao:
                  type: text
                  description: 'nullable Especificação.'
                  example: reforma
                profissional:
                  type: string
                  description: 'nullable Profissional.'
                  example: José
                horas_execucao:
                  type: integer
                  description: 'nullable Horas de execução.'
                  example: 10
                observacoes:
                  type: text
                  description: 'nullable Observações.'
                  example: 'observações referente ao serviço'
              required:
                - data_inicio_servico
                - almoxarife_nome
                - almoxarife_email
                - user_id
                - status
                - data_fim_servico
  '/api/ordem_servico/{id}/items':
    get:
      summary: 'Mostra os itens de uma ordem de serviço'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      ordem_servico_id: 2
                      item_id: 1
                      quantidade: 10
                    -
                      id: 2
                      ordem_servico_id: 2
                      item_id: 3
                      quantidade: 800
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        ordem_servico_id: 2
                        item_id: 1
                        quantidade: 10
                      -
                        id: 2
                        ordem_servico_id: 2
                        item_id: 3
                        quantidade: 800
                    items:
                      type: object
      tags:
        - OrdemServico
    parameters:
      -
        in: path
        name: id
        description: 'ID da ordem de serviço.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/ordem_servico/{id}':
    get:
      summary: 'Mostra uma ordem de serviço'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    departamento_id: 2
                    origem_id: 1
                    local_servico_id: 2
                    status: Iniciada
                    data_inicio_servico: '2022-08-30T14:48'
                    data_fim_servico: '2022-08-31T17:50'
                    almoxarife_nome: João
                    almoxarife_email: joao@teste.com.br
                    especificacao: reforma
                    profissional: José
                    horas_execucao: 10
                    observacoes: 'observações referente ao serviço'
                    flg_baixa: 0
                    user_id: 1
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      departamento_id: 2
                      origem_id: 1
                      local_servico_id: 2
                      status: Iniciada
                      data_inicio_servico: '2022-08-30T14:48'
                      data_fim_servico: '2022-08-31T17:50'
                      almoxarife_nome: João
                      almoxarife_email: joao@teste.com.br
                      especificacao: reforma
                      profissional: José
                      horas_execucao: 10
                      observacoes: 'observações referente ao serviço'
                      flg_baixa: 0
                      user_id: 1
      tags:
        - OrdemServico
    delete:
      summary: 'Deleta uma ordem de serviço'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Ordem de serviço deletada com sucesso!'
                  data:
                    id: 1
                    departamento_id: 2
                    origem_id: 1
                    local_servico_id: 2
                    status: Iniciada
                    data_inicio_servico: '2022-08-30T14:48'
                    data_fim_servico: '2022-08-31T17:50'
                    almoxarife_nome: João
                    almoxarife_email: joao@teste.com.br
                    especificacao: reforma
                    profissional: José
                    horas_execucao: 10
                    observacoes: 'observações referente ao serviço'
                    user_id: 1
                properties:
                  message:
                    type: string
                    example: 'Ordem de serviço deletada com sucesso!'
                  data:
                    type: object
                    example:
                      id: 1
                      departamento_id: 2
                      origem_id: 1
                      local_servico_id: 2
                      status: Iniciada
                      data_inicio_servico: '2022-08-30T14:48'
                      data_fim_servico: '2022-08-31T17:50'
                      almoxarife_nome: João
                      almoxarife_email: joao@teste.com.br
                      especificacao: reforma
                      profissional: José
                      horas_execucao: 10
                      observacoes: 'observações referente ao serviço'
                      user_id: 1
      tags:
        - OrdemServico
    post:
      summary: 'Edita uma ordem de serviço'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    departamento_id: 2
                    origem_id: 1
                    local_servico_id: 2
                    status: Iniciada
                    data_inicio_servico: '2022-08-30T14:48'
                    data_fim_servico: '2022-08-31T17:50'
                    almoxarife_nome: João
                    almoxarife_email: joao@teste.com.br
                    especificacao: reforma
                    profissional: José
                    horas_execucao: 10
                    observacoes: 'observações referente ao serviço'
                    flg_baixa: 0
                    user_id: 1
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      departamento_id: 2
                      origem_id: 1
                      local_servico_id: 2
                      status: Iniciada
                      data_inicio_servico: '2022-08-30T14:48'
                      data_fim_servico: '2022-08-31T17:50'
                      almoxarife_nome: João
                      almoxarife_email: joao@teste.com.br
                      especificacao: reforma
                      profissional: José
                      horas_execucao: 10
                      observacoes: 'observações referente ao serviço'
                      flg_baixa: 0
                      user_id: 1
      tags:
        - OrdemServico
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                departamento_id:
                  type: integer
                  description: 'ID do Departamento.'
                  example: 2
                origem_id:
                  type: integer
                  description: 'ID do Origem.'
                  example: 1
                local_servico_id:
                  type: integer
                  description: 'ID do Local do serviço.'
                  example: 2
                data_inicio_servico:
                  type: datetime
                  description: 'Data do serviço.'
                  example: '2022-08-30T14:48'
                almoxarife_nome:
                  type: string
                  description: 'Nome do Almoxarife.'
                  example: João
                almoxarife_email:
                  type: string
                  description: 'E-mail do Almoxarife.'
                  example: joao@teste.com.br
                user_id:
                  type: integer
                  description: 'ID do usuário.'
                  example: 1
                status:
                  type: enum
                  description: "('A iniciar','Iniciada','Finalizada') Tipo."
                  example: Iniciada
                data_fim_servico:
                  type: datetime
                  description: 'Data do serviço.'
                  example: '2022-08-31T17:50'
                especificacao:
                  type: text
                  description: 'nullable Especificação.'
                  example: reforma
                profissional:
                  type: string
                  description: 'nullable Profissional.'
                  example: José
                horas_execucao:
                  type: integer
                  description: 'nullable Horas de execução.'
                  example: 10
                observacoes:
                  type: text
                  description: 'nullable Observações.'
                  example: 'observações referente ao serviço'
              required:
                - data_inicio_servico
                - almoxarife_nome
                - almoxarife_email
                - user_id
                - status
                - data_fim_servico
    parameters:
      -
        in: path
        name: id
        description: 'ID da ordem de serviço.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/ordem_servico/{id}/profissionais':
    get:
      summary: 'Mostra os profissionais de uma ordem de serviço'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"ordem_servico_id\": 2,\n            \"profissional_id\": 1,\n            \"data_inicio\": '2022-11-07',\n            \"horas_empregadas\": 10\n        },{\n            \"id\": 2,\n            \"ordem_servico_id\": 2,\n            \"profissional_id\": 2,\n            \"data_inicio\": '2022-11-07',\n            \"horas_empregadas\": 6\n        }\n    ]\n}"
      tags:
        - OrdemServico
    parameters:
      -
        in: path
        name: id
        description: 'ID da ordem de serviço.'
        example: 2
        required: true
        schema:
          type: integer
  /api/ordem_servicos:
    get:
      summary: 'Lista as ordens de serviços'
      description: ''
      parameters:
        -
          in: query
          name: 'filter[origem]'
          description: 'Filtro de Local (base) do item.'
          example: Leopoldina
          required: false
          schema:
            type: string
            description: 'Filtro de Local (base) do item.'
            example: Leopoldina
        -
          in: query
          name: 'filter[local_servico]'
          description: 'Filtro de nome do local de destino dos materiais.'
          example: Ibirapuera
          required: false
          schema:
            type: string
            description: 'Filtro de nome do local de destino dos materiais.'
            example: Ibirapuera
        -
          in: query
          name: 'filter[almoxarife_nome]'
          description: 'Filtro do Nome do almoxarife responsável.'
          example: Fulano
          required: false
          schema:
            type: string
            description: 'Filtro do Nome do almoxarife responsável.'
            example: Fulano
        -
          in: query
          name: 'filter[almoxarife_email]'
          description: 'Filtro do e-mail do almoxarife responsável.'
          example: fulano@mail.com
          required: false
          schema:
            type: string
            description: 'Filtro do e-mail do almoxarife responsável.'
            example: fulano@mail.com
        -
          in: query
          name: 'filter[servico_depois_de]'
          description: 'Filtro inicial de período da data de serviço.'
          example: '2023-01-01'
          required: false
          schema:
            type: string
            description: 'Filtro inicial de período da data de serviço.'
            example: '2023-01-01'
        -
          in: query
          name: 'filter[servico_antes_de]'
          description: 'Filtro final de período da data de serviço.'
          example: '2023-12-31'
          required: false
          schema:
            type: string
            description: 'Filtro final de período da data de serviço.'
            example: '2023-12-31'
        -
          in: query
          name: sort
          description: "Campo a ser ordenado (padrão ascendente, inserir um hífen antes para decrescente). Colunas possíveis: 'id', 'data_inicio_servico', 'data_fim_servico', 'origem.nome', 'locais.nome'"
          example: '-locais.nome'
          required: false
          schema:
            type: string
            description: "Campo a ser ordenado (padrão ascendente, inserir um hífen antes para decrescente). Colunas possíveis: 'id', 'data_inicio_servico', 'data_fim_servico', 'origem.nome', 'locais.nome'"
            example: '-locais.nome'
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - OrdemServico
  '/api/ordem_servico/{id}/baixa':
    post:
      summary: 'Emite a Baixa de uma ordem de serviço'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Baixa da Ordem de serviço efetuada com sucesso!'
                  data:
                    id: 1
                    departamento_id: 2
                    origem_id: 1
                    local_servico_id: 2
                    status: Iniciada
                    data_inicio_servico: '2022-08-30T14:48'
                    data_fim_servico: '2022-08-31T17:50'
                    almoxarife_nome: João
                    almoxarife_email: joao@teste.com.br
                    especificacao: reforma
                    profissional: José
                    horas_execucao: 10
                    observacoes: 'observações referente ao serviço'
                    flg_baixa: 1
                    user_id: 1
                properties:
                  message:
                    type: string
                    example: 'Baixa da Ordem de serviço efetuada com sucesso!'
                  data:
                    type: object
                    example:
                      id: 1
                      departamento_id: 2
                      origem_id: 1
                      local_servico_id: 2
                      status: Iniciada
                      data_inicio_servico: '2022-08-30T14:48'
                      data_fim_servico: '2022-08-31T17:50'
                      almoxarife_nome: João
                      almoxarife_email: joao@teste.com.br
                      especificacao: reforma
                      profissional: José
                      horas_execucao: 10
                      observacoes: 'observações referente ao serviço'
                      flg_baixa: 1
                      user_id: 1
      tags:
        - OrdemServico
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ordem_servico_items:
                  type: array
                  description: 'Itens da ordem de serviço.'
                  example:
                    -
                      id: 2
                      enviado: 60
                      usado: 50
                      retorno: 10
                    -
                      id: 3
                      enviado: 5
                      usado: 3
                      retorno: 2
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: 'ID do item.'
                        example: 2
                      enviado:
                        type: integer
                        description: 'Quantidade enviada do item para o local de serviço.'
                        example: 60
                      usado:
                        type: integer
                        description: 'Quantidade usada do item para o serviço.'
                        example: 50
                      retorno:
                        type: integer
                        description: 'Quantidade a ser devolvida do item para a base de origem.'
                        example: 10
                    required:
                      - id
                      - enviado
                      - usado
                      - retorno
              required:
                - ordem_servico_items
    parameters:
      -
        in: path
        name: id
        description: 'ID da ordem de serviço que deseja editar.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/ordem_servico/{id}/baixa_pdf':
    get:
      summary: 'Gera um arquivo PDF da baixa efetuada na ordem de serviço'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/pdf
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\r\n        <title>Not Found</title>\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Nunito&display=swap\" rel=\"stylesheet\">\r\n\r\n        <style>\r\n            /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}a{background-color:transparent}code{font-family:monospace,monospace;font-size:1em}[hidden]{display:none}html{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}*,:after,:before{box-sizing:border-box;border:0 solid #e2e8f0}a{color:inherit;text-decoration:inherit}code{font-family:Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}svg,video{display:block;vertical-align:middle}video{max-width:100%;height:auto}.bg-white{--bg-opacity:1;background-color:#fff;background-color:rgba(255,255,255,var(--bg-opacity))}.bg-gray-100{--bg-opacity:1;background-color:#f7fafc;background-color:rgba(247,250,252,var(--bg-opacity))}.border-gray-200{--border-opacity:1;border-color:#edf2f7;border-color:rgba(237,242,247,var(--border-opacity))}.border-gray-400{--border-opacity:1;border-color:#cbd5e0;border-color:rgba(203,213,224,var(--border-opacity))}.border-t{border-top-width:1px}.border-r{border-right-width:1px}.flex{display:flex}.grid{display:grid}.hidden{display:none}.items-center{align-items:center}.justify-center{justify-content:center}.font-semibold{font-weight:600}.h-5{height:1.25rem}.h-8{height:2rem}.h-16{height:4rem}.text-sm{font-size:.875rem}.text-lg{font-size:1.125rem}.leading-7{line-height:1.75rem}.mx-auto{margin-left:auto;margin-right:auto}.ml-1{margin-left:.25rem}.mt-2{margin-top:.5rem}.mr-2{margin-right:.5rem}.ml-2{margin-left:.5rem}.mt-4{margin-top:1rem}.ml-4{margin-left:1rem}.mt-8{margin-top:2rem}.ml-12{margin-left:3rem}.-mt-px{margin-top:-1px}.max-w-xl{max-width:36rem}.max-w-6xl{max-width:72rem}.min-h-screen{min-height:100vh}.overflow-hidden{overflow:hidden}.p-6{padding:1.5rem}.py-4{padding-top:1rem;padding-bottom:1rem}.px-4{padding-left:1rem;padding-right:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.pt-8{padding-top:2rem}.fixed{position:fixed}.relative{position:relative}.top-0{top:0}.right-0{right:0}.shadow{box-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px 0 rgba(0,0,0,.06)}.text-center{text-align:center}.text-gray-200{--text-opacity:1;color:#edf2f7;color:rgba(237,242,247,var(--text-opacity))}.text-gray-300{--text-opacity:1;color:#e2e8f0;color:rgba(226,232,240,var(--text-opacity))}.text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}.text-gray-500{--text-opacity:1;color:#a0aec0;color:rgba(160,174,192,var(--text-opacity))}.text-gray-600{--text-opacity:1;color:#718096;color:rgba(113,128,150,var(--text-opacity))}.text-gray-700{--text-opacity:1;color:#4a5568;color:rgba(74,85,104,var(--text-opacity))}.text-gray-900{--text-opacity:1;color:#1a202c;color:rgba(26,32,44,var(--text-opacity))}.uppercase{text-transform:uppercase}.underline{text-decoration:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.tracking-wider{letter-spacing:.05em}.w-5{width:1.25rem}.w-8{width:2rem}.w-auto{width:auto}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}@-webkit-keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes  spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@-webkit-keyframes ping{0%{transform:scale(1);opacity:1}75%,to{transform:scale(2);opacity:0}}@keyframes  ping{0%{transform:scale(1);opacity:1}75%,to{transform:scale(2);opacity:0}}@-webkit-keyframes pulse{0%,to{opacity:1}50%{opacity:.5}}@keyframes  pulse{0%,to{opacity:1}50%{opacity:.5}}@-webkit-keyframes bounce{0%,to{transform:translateY(-25%);-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:translateY(0);-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1)}}@keyframes  bounce{0%,to{transform:translateY(-25%);-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:translateY(0);-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1)}}@media (min-width:640px){.sm\\:rounded-lg{border-radius:.5rem}.sm\\:block{display:block}.sm\\:items-center{align-items:center}.sm\\:justify-start{justify-content:flex-start}.sm\\:justify-between{justify-content:space-between}.sm\\:h-20{height:5rem}.sm\\:ml-0{margin-left:0}.sm\\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\\:pt-0{padding-top:0}.sm\\:text-left{text-align:left}.sm\\:text-right{text-align:right}}@media (min-width:768px){.md\\:border-t-0{border-top-width:0}.md\\:border-l{border-left-width:1px}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:1024px){.lg\\:px-8{padding-left:2rem;padding-right:2rem}}@media (prefers-color-scheme:dark){.dark\\:bg-gray-800{--bg-opacity:1;background-color:#2d3748;background-color:rgba(45,55,72,var(--bg-opacity))}.dark\\:bg-gray-900{--bg-opacity:1;background-color:#1a202c;background-color:rgba(26,32,44,var(--bg-opacity))}.dark\\:border-gray-700{--border-opacity:1;border-color:#4a5568;border-color:rgba(74,85,104,var(--border-opacity))}.dark\\:text-white{--text-opacity:1;color:#fff;color:rgba(255,255,255,var(--text-opacity))}.dark\\:text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}}\r\n        </style>\r\n\r\n        <style>\r\n            body {\r\n                font-family: 'Nunito', sans-serif;\r\n            }\r\n        </style>\r\n    </head>\r\n    <body class=\"antialiased\">\r\n        <div class=\"relative flex items-top justify-center min-h-screen bg-gray-100 dark:bg-gray-900 sm:items-center sm:pt-0\">\r\n            <div class=\"max-w-xl mx-auto sm:px-6 lg:px-8\">\r\n                <div class=\"flex items-center pt-8 sm:justify-start sm:pt-0\">\r\n                    <div class=\"px-4 text-lg text-gray-500 border-r border-gray-400 tracking-wider\">\r\n                        404                    </div>\r\n\r\n                    <div class=\"ml-4 text-lg text-gray-500 uppercase tracking-wider\">\r\n                        Not Found                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </body>\r\n</html>\r\n"
      tags:
        - OrdemServico
    parameters:
      -
        in: path
        name: id
        description: 'ID da ordem de serviço que deseja deletar.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/ordem_servico/{id}/baixa_json':
    get:
      summary: 'Gera um json da baixa efetuada na ordem de serviço'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/pdf
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\r\n        <title>Not Found</title>\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Nunito&display=swap\" rel=\"stylesheet\">\r\n\r\n        <style>\r\n            /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}a{background-color:transparent}code{font-family:monospace,monospace;font-size:1em}[hidden]{display:none}html{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}*,:after,:before{box-sizing:border-box;border:0 solid #e2e8f0}a{color:inherit;text-decoration:inherit}code{font-family:Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}svg,video{display:block;vertical-align:middle}video{max-width:100%;height:auto}.bg-white{--bg-opacity:1;background-color:#fff;background-color:rgba(255,255,255,var(--bg-opacity))}.bg-gray-100{--bg-opacity:1;background-color:#f7fafc;background-color:rgba(247,250,252,var(--bg-opacity))}.border-gray-200{--border-opacity:1;border-color:#edf2f7;border-color:rgba(237,242,247,var(--border-opacity))}.border-gray-400{--border-opacity:1;border-color:#cbd5e0;border-color:rgba(203,213,224,var(--border-opacity))}.border-t{border-top-width:1px}.border-r{border-right-width:1px}.flex{display:flex}.grid{display:grid}.hidden{display:none}.items-center{align-items:center}.justify-center{justify-content:center}.font-semibold{font-weight:600}.h-5{height:1.25rem}.h-8{height:2rem}.h-16{height:4rem}.text-sm{font-size:.875rem}.text-lg{font-size:1.125rem}.leading-7{line-height:1.75rem}.mx-auto{margin-left:auto;margin-right:auto}.ml-1{margin-left:.25rem}.mt-2{margin-top:.5rem}.mr-2{margin-right:.5rem}.ml-2{margin-left:.5rem}.mt-4{margin-top:1rem}.ml-4{margin-left:1rem}.mt-8{margin-top:2rem}.ml-12{margin-left:3rem}.-mt-px{margin-top:-1px}.max-w-xl{max-width:36rem}.max-w-6xl{max-width:72rem}.min-h-screen{min-height:100vh}.overflow-hidden{overflow:hidden}.p-6{padding:1.5rem}.py-4{padding-top:1rem;padding-bottom:1rem}.px-4{padding-left:1rem;padding-right:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.pt-8{padding-top:2rem}.fixed{position:fixed}.relative{position:relative}.top-0{top:0}.right-0{right:0}.shadow{box-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px 0 rgba(0,0,0,.06)}.text-center{text-align:center}.text-gray-200{--text-opacity:1;color:#edf2f7;color:rgba(237,242,247,var(--text-opacity))}.text-gray-300{--text-opacity:1;color:#e2e8f0;color:rgba(226,232,240,var(--text-opacity))}.text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}.text-gray-500{--text-opacity:1;color:#a0aec0;color:rgba(160,174,192,var(--text-opacity))}.text-gray-600{--text-opacity:1;color:#718096;color:rgba(113,128,150,var(--text-opacity))}.text-gray-700{--text-opacity:1;color:#4a5568;color:rgba(74,85,104,var(--text-opacity))}.text-gray-900{--text-opacity:1;color:#1a202c;color:rgba(26,32,44,var(--text-opacity))}.uppercase{text-transform:uppercase}.underline{text-decoration:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.tracking-wider{letter-spacing:.05em}.w-5{width:1.25rem}.w-8{width:2rem}.w-auto{width:auto}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}@-webkit-keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes  spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@-webkit-keyframes ping{0%{transform:scale(1);opacity:1}75%,to{transform:scale(2);opacity:0}}@keyframes  ping{0%{transform:scale(1);opacity:1}75%,to{transform:scale(2);opacity:0}}@-webkit-keyframes pulse{0%,to{opacity:1}50%{opacity:.5}}@keyframes  pulse{0%,to{opacity:1}50%{opacity:.5}}@-webkit-keyframes bounce{0%,to{transform:translateY(-25%);-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:translateY(0);-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1)}}@keyframes  bounce{0%,to{transform:translateY(-25%);-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:translateY(0);-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1)}}@media (min-width:640px){.sm\\:rounded-lg{border-radius:.5rem}.sm\\:block{display:block}.sm\\:items-center{align-items:center}.sm\\:justify-start{justify-content:flex-start}.sm\\:justify-between{justify-content:space-between}.sm\\:h-20{height:5rem}.sm\\:ml-0{margin-left:0}.sm\\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\\:pt-0{padding-top:0}.sm\\:text-left{text-align:left}.sm\\:text-right{text-align:right}}@media (min-width:768px){.md\\:border-t-0{border-top-width:0}.md\\:border-l{border-left-width:1px}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:1024px){.lg\\:px-8{padding-left:2rem;padding-right:2rem}}@media (prefers-color-scheme:dark){.dark\\:bg-gray-800{--bg-opacity:1;background-color:#2d3748;background-color:rgba(45,55,72,var(--bg-opacity))}.dark\\:bg-gray-900{--bg-opacity:1;background-color:#1a202c;background-color:rgba(26,32,44,var(--bg-opacity))}.dark\\:border-gray-700{--border-opacity:1;border-color:#4a5568;border-color:rgba(74,85,104,var(--border-opacity))}.dark\\:text-white{--text-opacity:1;color:#fff;color:rgba(255,255,255,var(--text-opacity))}.dark\\:text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}}\r\n        </style>\r\n\r\n        <style>\r\n            body {\r\n                font-family: 'Nunito', sans-serif;\r\n            }\r\n        </style>\r\n    </head>\r\n    <body class=\"antialiased\">\r\n        <div class=\"relative flex items-top justify-center min-h-screen bg-gray-100 dark:bg-gray-900 sm:items-center sm:pt-0\">\r\n            <div class=\"max-w-xl mx-auto sm:px-6 lg:px-8\">\r\n                <div class=\"flex items-center pt-8 sm:justify-start sm:pt-0\">\r\n                    <div class=\"px-4 text-lg text-gray-500 border-r border-gray-400 tracking-wider\">\r\n                        404                    </div>\r\n\r\n                    <div class=\"ml-4 text-lg text-gray-500 uppercase tracking-wider\">\r\n                        Not Found                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </body>\r\n</html>\r\n"
      tags:
        - OrdemServico
    parameters:
      -
        in: path
        name: id
        description: 'ID da ordem de serviço que deseja deletar.'
        example: 1
        required: true
        schema:
          type: integer
  /api/profissionais:
    get:
      summary: 'Lista os profissionais de acordo com o local e departamento especificados'
      description: ''
      parameters:
        -
          in: query
          name: local
          description: 'ID do local.'
          example: '2'
          required: false
          schema:
            type: string
            description: 'ID do local.'
            example: '2'
        -
          in: query
          name: depto
          description: 'ID do departamento.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'ID do departamento.'
            example: '3'
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Profissional
  /api/tipo_items:
    get:
      summary: 'Lista os tipos de itens'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      departamento_id: 3
                      departamento: CGPABI/DGPU
                      nome: alvenaria
                      descricao: null
                    -
                      id: 2
                      departamento_id: 3
                      departamento: CGPABI/DGPU
                      nome: carpintaria
                      descricao: null
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        departamento_id: 3
                        departamento: CGPABI/DGPU
                        nome: alvenaria
                        descricao: null
                      -
                        id: 2
                        departamento_id: 3
                        departamento: CGPABI/DGPU
                        nome: carpintaria
                        descricao: null
                    items:
                      type: object
      tags:
        - TipoItem
  /api/transferencia:
    get:
      summary: 'Lista Todas as Transferencias'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n     \"mensagem\": \"Todas transferencias cadastradas\",\n     \"transferencias\": [\n         {\n             \"id\": 4,\n             \"base_origem_id\": {\n                 \"id\": 1,\n                 \"departamento_id\": 1,\n                 \"nome\": \"Lugar 01\",\n                 \"tipo\": \"parque\",\n                 \"cep\": \"93472898\",\n                 \"logradouro\": null,\n                 \"numero\": null,\n                 \"bairro\": null,\n                 \"cidade\": null,\n                 \"created_at\": null,\n                 \"updated_at\": null\n             },\n             \"base_destino_id\": {\n                 \"id\": 2,\n                 \"departamento_id\": 2,\n                 \"nome\": \"Lugar 02\",\n                 \"tipo\": \"base\",\n                 \"cep\": null,\n                 \"logradouro\": null,\n                 \"numero\": null,\n                 \"bairro\": null,\n                 \"cidade\": null,\n                 \"created_at\": null,\n                 \"updated_at\": null\n             },\n             \"data_transferencia\": \"2023-05-05 00:00:00\",\n             \"status\": \"recebido\",\n             \"user_id\": 1,\n             \"observacao\": \"Está faltando um parafuso\",\n             \"observacao_motivo\": \"avaria\",\n             \"observacao_user_id\": 1,\n             \"created_at\": \"2023-05-04T15:02:33.000000Z\",\n             \"updated_at\": \"2023-05-10T13:02:27.000000Z\"\n   }\n}"
      tags:
        - 'Tranferencia de Materiais'
    post:
      summary: 'Cadastra uma nova Transferencia.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Transferencia criada com sucesso'
                  transferencia:
                    base_origem_id: 1
                    base_destino_id: 2
                    data_transferencia: 2023/05/05
                    status: recebido
                    user_id: 1
                    observacao: 'Uma Observação'
                    observacao_motivo: avaria
                    observacao_user_id: 1
                    updated_at: '2023-05-11T13:18:55.000000Z'
                    created_at: '2023-05-11T13:18:55.000000Z'
                    id: 18
                  itens:
                    -
                      entrada_id: 1
                      item_id: 4
                      quantidade: 1
                    -
                      entrada_id: 1
                      item_id: 45
                      quantidade: 3
                properties:
                  mensagem:
                    type: string
                    example: 'Transferencia criada com sucesso'
                  transferencia:
                    type: object
                    example:
                      base_origem_id: 1
                      base_destino_id: 2
                      data_transferencia: 2023/05/05
                      status: recebido
                      user_id: 1
                      observacao: 'Uma Observação'
                      observacao_motivo: avaria
                      observacao_user_id: 1
                      updated_at: '2023-05-11T13:18:55.000000Z'
                      created_at: '2023-05-11T13:18:55.000000Z'
                      id: 18
                  itens:
                    type: array
                    example:
                      -
                        entrada_id: 1
                        item_id: 4
                        quantidade: 1
                      -
                        entrada_id: 1
                        item_id: 45
                        quantidade: 3
                    items:
                      type: object
      tags:
        - 'Tranferencia de Materiais'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                base_origem_id:
                  type: integer
                  description: 'ID do Local que sairá.'
                  example: 2
                base_destino_id:
                  type: integer
                  description: 'ID do Local destino.'
                  example: 1
                data_transferencia:
                  type: date
                  description: 'Data da Transferencia.'
                  example: 2023/05/05
                status:
                  type: enum
                  description: 'Status da transferencia (enviado, recebido, recusado).'
                  example: enviado
                observacao:
                  type: text
                  description: Observação.
                  example: 'Está faltando um parafuso'
                observacao_motivo:
                  type: enum
                  description: 'Observação Motivo (nao_enviado, itens_faltando, extravio, furto, avaria).'
                  example: itens_faltando
                itens:
                  type: object
                  description: 'Lista de itens.'
                  example: []
                  properties:
                    entrada_id:
                      type: integer
                      description: 'ID da entrada.'
                      example: 3
                    item_id:
                      type: integer
                      description: 'ID do item.'
                      example: 5
                    quantidade:
                      type: integer
                      description: 'Quantidade de itens.'
                      example: 355
              required:
                - base_origem_id
                - base_destino_id
                - data_transferencia
                - status
                - itens
  '/api/transferencia/{id}':
    get:
      summary: 'Mostrar uma transferencia'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Transferencia encontrada com sucesso!'
                  transferencia:
                    id: 4
                    base_origem_id:
                      id: 1
                      departamento_id: 1
                      nome: 'Lugar 01'
                      tipo: parque
                      cep: '93472898'
                      logradouro: null
                      numero: null
                      bairro: null
                      cidade: null
                      created_at: null
                      updated_at: null
                    base_destino_id:
                      id: 2
                      departamento_id: 2
                      nome: 'Lugar 02'
                      tipo: base
                      cep: null
                      logradouro: null
                      numero: null
                      bairro: null
                      cidade: null
                      created_at: null
                      updated_at: null
                    data_transferencia: '2023-05-05 00:00:00'
                    status: recebido
                    user_id: 1
                    observacao: 'Está faltando um parafuso'
                    observacao_motivo: avaria
                    observacao_user_id: 1
                    created_at: '2023-05-04T15:02:33.000000Z'
                    updated_at: '2023-05-10T13:02:27.000000Z'
                properties:
                  mensagem:
                    type: string
                    example: 'Transferencia encontrada com sucesso!'
                  transferencia:
                    type: object
                    example:
                      id: 4
                      base_origem_id:
                        id: 1
                        departamento_id: 1
                        nome: 'Lugar 01'
                        tipo: parque
                        cep: '93472898'
                        logradouro: null
                        numero: null
                        bairro: null
                        cidade: null
                        created_at: null
                        updated_at: null
                      base_destino_id:
                        id: 2
                        departamento_id: 2
                        nome: 'Lugar 02'
                        tipo: base
                        cep: null
                        logradouro: null
                        numero: null
                        bairro: null
                        cidade: null
                        created_at: null
                        updated_at: null
                      data_transferencia: '2023-05-05 00:00:00'
                      status: recebido
                      user_id: 1
                      observacao: 'Está faltando um parafuso'
                      observacao_motivo: avaria
                      observacao_user_id: 1
                      created_at: '2023-05-04T15:02:33.000000Z'
                      updated_at: '2023-05-10T13:02:27.000000Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Transferencia naõ encontrada!'
                properties:
                  mensagem:
                    type: string
                    example: 'Transferencia naõ encontrada!'
      tags:
        - 'Tranferencia de Materiais'
    put:
      summary: 'Edita uma Transferencia.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n     {\n   \"mensagem\": \"Transferencia atualizada com sucesso!\",\n   \"transferencia\": {\n       \"id\": 12,\n       \"base_origem_id\": 1,\n       \"base_destino_id\": 2,\n       \"data_transferencia\": \"2023/05/05\",\n       \"status\": \"recebido\",\n       \"user_id\": 1,\n       \"observacao\": \"Está faltando um parafuso\",\n       \"observacao_motivo\": \"avaria\",\n       \"observacao_user_id\": 1,\n       \"created_at\": \"2023-05-10T12:56:18.000000Z\",\n       \"updated_at\": \"2023-05-10T12:57:33.000000Z\"\n     }\n}"
      tags:
        - 'Tranferencia de Materiais'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                base_origem_id:
                  type: integer
                  description: 'ID do Local que sairá.'
                  example: 1
                base_destino_id:
                  type: integer
                  description: 'ID do Local destino.'
                  example: 2
                data_transferencia:
                  type: date
                  description: 'Data da Transferencia.'
                  example: 2023/05/05
                status:
                  type: enum
                  description: 'Status da transferencia (enviado, recebido, recusado).'
                  example: recebido
                observacao:
                  type: text
                  description: Observação.
                  example: 'Está faltando um parafuso'
                observacao_motivo:
                  type: enum
                  description: 'Observação Motivo (nao_enviado, itens_faltando, extravio, furto, avaria).'
                  example: avaria
              required:
                - base_origem_id
                - base_destino_id
                - data_transferencia
                - status
    delete:
      summary: 'Deleta uma Transferencia'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Transferencia deletada com sucesso!'
                  transferencia:
                    id: 3
                    base_origem_id: 1
                    base_destino_id: 2
                    data_transferencia: '2023-05-04 11:54:26'
                    status: enviado
                    user_id: 1
                    observacao: null
                    observacao_motivo: null
                    observacao_user_id: null
                    created_at: null
                    updated_at: null
                properties:
                  mensagem:
                    type: string
                    example: 'Transferencia deletada com sucesso!'
                  transferencia:
                    type: object
                    example:
                      id: 3
                      base_origem_id: 1
                      base_destino_id: 2
                      data_transferencia: '2023-05-04 11:54:26'
                      status: enviado
                      user_id: 1
                      observacao: null
                      observacao_motivo: null
                      observacao_user_id: null
                      created_at: null
                      updated_at: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  mensagem: 'Transferencia não encontrada para deletar!'
                properties:
                  mensagem:
                    type: string
                    example: 'Transferencia não encontrada para deletar!'
      tags:
        - 'Tranferencia de Materiais'
    parameters:
      -
        in: path
        name: id
        description: 'ID da transferencia.'
        example: 5
        required: true
        schema:
          type: integer
tags:
  -
    name: Autenticação
    description: "\nAPIs para login e logout do sistema"
  -
    name: Departamento
    description: "\nAPIs para listar, cadastrar, editar e remover dados de departamento"
  -
    name: Endpoints
    description: ''
  -
    name: Entrada
    description: "\nAPIs para listar, cadastrar, editar e remover dados de entrada"
  -
    name: EntradaItem
    description: "\nAPIs para listar, cadastrar, editar e remover dados de entrada de itens"
  -
    name: Inventário
    description: "\nAPIs para listar, cadastrar, editar e remover dados de inventários"
  -
    name: Item
    description: "\nAPIs para listar, cadastrar, editar e remover dados de itens"
  -
    name: Local
    description: "\nAPIs para listar, cadastrar, editar e remover dados de locais"
  -
    name: Medida
    description: "\nAPIs para listar, cadastrar, editar e remover dados de medidas"
  -
    name: Ocorrencias
    description: "\nAPIs para listar, cadastrar, editar e remover dados de Ocorrencias."
  -
    name: OrdemServico
    description: "\nAPIs para listar, cadastrar, editar e remover dados de ordens de serviços"
  -
    name: Profissional
    description: "\nAPIs para listar, cadastrar, editar e remover dados de profissionais"
  -
    name: TipoItem
    description: "\nAPIs para listar, cadastrar, editar e remover dados de tipo_items"
  -
    name: 'Tranferencia de Materiais'
    description: "\nAPIs para listar, cadastrar, editar e remover dados das Transferencias."
